{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mista\\\\Desktop\\\\GHrepos\\\\Google-Search-API\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mista\\\\Desktop\\\\GHrepos\\\\Google-Search-API\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { Data } from \"../components/Data\";\n\nfunction Search() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      booksResult = _useState4[0],\n      setbooksResult = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var book = event.target.value;\n    setBooks(book);\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    API.searchBooks(books).then(function (res) {\n      console.log(\"data\", res.data.items);\n      setbooksResult(res.data.items);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Search for a Book\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Search For A Book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, booksResult.map(function (book) {\n    return /*#__PURE__*/React.createElement(Data, {\n      key: book.etag,\n      href: book.volumeInfo.previewLink,\n      thumbnail: !book.volumeInfo.imageLinks ? \"https://via.placeholder.com/150\" : book.volumeInfo.imageLinks.thumbnail,\n      title: book.volumeInfo.title,\n      author: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    });\n  }))));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/mista/Desktop/GHrepos/Google-Search-API/client/src/pages/Search.js"],"names":["React","useState","useEffect","Jumbotron","API","Col","Row","Container","Input","FormBtn","Data","Search","books","setBooks","booksResult","setbooksResult","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","book","target","value","handleFormSubmit","preventDefault","searchBooks","items","map","etag","volumeInfo","previewLink","imageLinks","thumbnail","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport { Data } from \"../components/Data\";\r\nfunction Search() {\r\n    const [books, setBooks] = useState([])\r\n    const [booksResult, setbooksResult] = useState([])\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n   \r\n\r\n    // Handles updating component state when the user types into the input field\r\n    function handleInputChange(event) {\r\n        const book = event.target.value;\r\n        setBooks(book);\r\n    };\r\n    // When the form is submitted, use the API.saveBook method to save the book data\r\n    // Then reload books from the database\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        API.searchBooks(books)\r\n            .then((res) => {\r\n                console.log(\"data\", res.data.items)\r\n                setbooksResult(res.data.items);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <Jumbotron>\r\n                        <h1>Search for a Book</h1>\r\n                    </Jumbotron>\r\n                    <form onSubmit={handleFormSubmit}>\r\n                        <Input\r\n                            onChange={handleInputChange}\r\n                            name=\"title\"\r\n                            placeholder=\"Search For A Book\"\r\n                        />\r\n                        <FormBtn\r\n                            onClick={handleFormSubmit}\r\n                        >\r\n                            Search\r\n            </FormBtn>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n            <table className=\"table\">\r\n              <tbody>\r\n                {booksResult.map((book) => (\r\n                  <Data\r\n                    key={book.etag}\r\n                    href={book.volumeInfo.previewLink}\r\n                    thumbnail={!book.volumeInfo.imageLinks ? \"https://via.placeholder.com/150\" : book.volumeInfo.imageLinks.thumbnail}\r\n                    title={book.volumeInfo.title}\r\n                    author={book.volumeInfo.authors}\r\n                    description={book.volumeInfo.description}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n        </Container>\r\n    );\r\n}\r\nexport default Search;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}